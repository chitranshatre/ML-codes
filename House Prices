import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Sample data: size of the house (in square feet) and the corresponding price (in thousands)
X = np.array([[600], [800], [1000], [1200], [1500], [2000], [2500]])
y = np.array([150, 200, 250, 300, 350, 400, 450])

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse:.2f}')

# Plot the results
plt.scatter(X, y, color='blue', label='Actual data')
plt.plot(X, model.predict(X), color='red', label='Regression line')
plt.xlabel('Size (square feet)')
plt.ylabel('Price (thousands)')
plt.title('Linear Regression Example')
plt.legend()
plt.show()
